#%RAML 0.8
title: Google Drive Upload API
version: 2
baseUri:  https://www.googleapis.com/upload/drive/v2
securedBy: [oauth_2_0]
securitySchemes: 
    - 
        "oauth_2_0": 
            description: |
                Dropbox supports OAuth 2.0 for authenticating all API requests.
            type: "OAuth 2.0"
            describedBy: 
                headers: 
                    "Authorization": 
                        description: |
                            Used to send a valid OAuth 2 access token. Do not use
                            with the "access_token" query string parameter.
                        type: string
                        required: false
                        repeat: false
                queryParameters: 
                    "access_token": 
                        description: |
                            Used to send a valid OAuth 2 access token. Do not use together with
                            the "Authorization" header
                        type: string
                        required: false
                        repeat: false
                responses: 
                    "401": 
                        description: |
                            Bad or expired token. This can happen if the user or Dropbox
                            revoked or expired an access token. To fix, you should re-
                            authenticate the user.
                    "403": 
                        description: |
                            Bad OAuth request (wrong consumer key, bad nonce, expired
                            imestamp...). Unfortunately, re-authenticating the user won't help here.
            settings: 
                authorizationUri: "https://accounts.google.com/o/oauth2/auth"
                accessTokenUri: "https://www.googleapis.com/oauth2/v3/token"
                
schemas: 
  - 
    file: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": "http://jsonschema.net",
        "type": "object",
        "properties": {
          "kind": {
            "id": "http://jsonschema.net/kind",
            "type": "string"
          },
          "id": {
            "id": "http://jsonschema.net/id",
            "type": "string"
          },
          "etag": {
            "id": "http://jsonschema.net/etag",
            "type": "string"
          },
          "selfLink": {
            "id": "http://jsonschema.net/selfLink",
            "type": "string"
          },
          "webContentLink": {
            "id": "http://jsonschema.net/webContentLink",
            "type": "string"
          },
          "webViewLink": {
            "id": "http://jsonschema.net/webViewLink",
            "type": "string"
          },
          "alternateLink": {
            "id": "http://jsonschema.net/alternateLink",
            "type": "string"
          },
          "embedLink": {
            "id": "http://jsonschema.net/embedLink",
            "type": "string"
          },
          "openWithLinks": {
            "id": "http://jsonschema.net/openWithLinks",
            "type": "string"
          },
          "defaultOpenWithLink": {
            "id": "http://jsonschema.net/defaultOpenWithLink",
            "type": "string"
          },
          "iconLink": {
            "id": "http://jsonschema.net/iconLink",
            "type": "string"
          },
          "thumbnailLink": {
            "id": "http://jsonschema.net/thumbnailLink",
            "type": "string"
          },
          "thumbnail": {
            "id": "http://jsonschema.net/thumbnail",
            "type": "object",
            "properties": {
              "image": {
                "id": "http://jsonschema.net/thumbnail/image",
                "type": "string"
              },
              "mimeType": {
                "id": "http://jsonschema.net/thumbnail/mimeType",
                "type": "string"
              }
            }
          },
          "title": {
            "id": "http://jsonschema.net/title",
            "type": "string"
          },
          "mimeType": {
            "id": "http://jsonschema.net/mimeType",
            "type": "string"
          },
          "description": {
            "id": "http://jsonschema.net/description",
            "type": "string"
          },
          "labels": {
            "id": "http://jsonschema.net/labels",
            "type": "object",
            "properties": {
              "starred": {
                "id": "http://jsonschema.net/labels/starred",
                "type": "string"
              },
              "hidden": {
                "id": "http://jsonschema.net/labels/hidden",
                "type": "string"
              },
              "trashed": {
                "id": "http://jsonschema.net/labels/trashed",
                "type": "string"
              },
              "restricted": {
                "id": "http://jsonschema.net/labels/restricted",
                "type": "string"
              },
              "viewed": {
                "id": "http://jsonschema.net/labels/viewed",
                "type": "string"
              }
            }
          },
          "createdDate": {
            "id": "http://jsonschema.net/createdDate",
            "type": "string"
          },
          "modifiedDate": {
            "id": "http://jsonschema.net/modifiedDate",
            "type": "string"
          },
          "modifiedByMeDate": {
            "id": "http://jsonschema.net/modifiedByMeDate",
            "type": "string"
          },
          "lastViewedByMeDate": {
            "id": "http://jsonschema.net/lastViewedByMeDate",
            "type": "string"
          },
          "markedViewedByMeDate": {
            "id": "http://jsonschema.net/markedViewedByMeDate",
            "type": "string"
          },
          "sharedWithMeDate": {
            "id": "http://jsonschema.net/sharedWithMeDate",
            "type": "string"
          },
          "version": {
            "id": "http://jsonschema.net/version",
            "type": "string"
          },
          "sharingUser": {
            "id": "http://jsonschema.net/sharingUser",
            "type": "object",
            "properties": {
              "kind": {
                "id": "http://jsonschema.net/sharingUser/kind",
                "type": "string"
              },
              "displayName": {
                "id": "http://jsonschema.net/sharingUser/displayName",
                "type": "string"
              },
              "picture": {
                "id": "http://jsonschema.net/sharingUser/picture",
                "type": "object",
                "properties": {
                  "url": {
                    "id": "http://jsonschema.net/sharingUser/picture/url",
                    "type": "string"
                  }
                }
              },
              "isAuthenticatedUser": {
                "id": "http://jsonschema.net/sharingUser/isAuthenticatedUser",
                "type": "string"
              },
              "permissionId": {
                "id": "http://jsonschema.net/sharingUser/permissionId",
                "type": "string"
              },
              "emailAddress": {
                "id": "http://jsonschema.net/sharingUser/emailAddress",
                "type": "string"
              }
            }
          },
          "parents": {
            "id": "http://jsonschema.net/parents",
            "type": "array",
            "items": {
              "id": "http://jsonschema.net/parents/0",
              "type": "string"
            }
          },
          "downloadUrl": {
            "id": "http://jsonschema.net/downloadUrl",
            "type": "string"
          },
          "exportLinks": {
            "id": "http://jsonschema.net/exportLinks",
            "type": "string"
          },
          "indexableText": {
            "id": "http://jsonschema.net/indexableText",
            "type": "object",
            "properties": {
              "text": {
                "id": "http://jsonschema.net/indexableText/text",
                "type": "string"
              }
            }
          },
          "userPermission": {
            "id": "http://jsonschema.net/userPermission",
            "type": "string"
          },
          "permissions": {
            "id": "http://jsonschema.net/permissions",
            "type": "array",
            "items": {
              "id": "http://jsonschema.net/permissions/0",
              "type": "string"
            }
          },
          "originalFilename": {
            "id": "http://jsonschema.net/originalFilename",
            "type": "string"
          },
          "fileExtension": {
            "id": "http://jsonschema.net/fileExtension",
            "type": "string"
          },
          "md5Checksum": {
            "id": "http://jsonschema.net/md5Checksum",
            "type": "string"
          },
          "fileSize": {
            "id": "http://jsonschema.net/fileSize",
            "type": "string"
          },
          "quotaBytesUsed": {
            "id": "http://jsonschema.net/quotaBytesUsed",
            "type": "string"
          },
          "ownerNames": {
            "id": "http://jsonschema.net/ownerNames",
            "type": "array",
            "items": {
              "id": "http://jsonschema.net/ownerNames/0",
              "type": "string"
            }
          },
          "owners": {
            "id": "http://jsonschema.net/owners",
            "type": "array",
            "items": {
              "id": "http://jsonschema.net/owners/0",
              "type": "object",
              "properties": {
                "kind": {
                  "id": "http://jsonschema.net/owners/0/kind",
                  "type": "string"
                },
                "displayName": {
                  "id": "http://jsonschema.net/owners/0/displayName",
                  "type": "string"
                },
                "picture": {
                  "id": "http://jsonschema.net/owners/0/picture",
                  "type": "object",
                  "properties": {
                    "url": {
                      "id": "http://jsonschema.net/owners/0/picture/url",
                      "type": "string"
                    }
                  }
                },
                "isAuthenticatedUser": {
                  "id": "http://jsonschema.net/owners/0/isAuthenticatedUser",
                  "type": "string"
                },
                "permissionId": {
                  "id": "http://jsonschema.net/owners/0/permissionId",
                  "type": "string"
                },
                "emailAddress": {
                  "id": "http://jsonschema.net/owners/0/emailAddress",
                  "type": "string"
                }
              }
            }
          },
          "lastModifyingUserName": {
            "id": "http://jsonschema.net/lastModifyingUserName",
            "type": "string"
          },
          "lastModifyingUser": {
            "id": "http://jsonschema.net/lastModifyingUser",
            "type": "object",
            "properties": {
              "kind": {
                "id": "http://jsonschema.net/lastModifyingUser/kind",
                "type": "string"
              },
              "displayName": {
                "id": "http://jsonschema.net/lastModifyingUser/displayName",
                "type": "string"
              },
              "picture": {
                "id": "http://jsonschema.net/lastModifyingUser/picture",
                "type": "object",
                "properties": {
                  "url": {
                    "id": "http://jsonschema.net/lastModifyingUser/picture/url",
                    "type": "string"
                  }
                }
              },
              "isAuthenticatedUser": {
                "id": "http://jsonschema.net/lastModifyingUser/isAuthenticatedUser",
                "type": "string"
              },
              "permissionId": {
                "id": "http://jsonschema.net/lastModifyingUser/permissionId",
                "type": "string"
              },
              "emailAddress": {
                "id": "http://jsonschema.net/lastModifyingUser/emailAddress",
                "type": "string"
              }
            }
          },
          "editable": {
            "id": "http://jsonschema.net/editable",
            "type": "string"
          },
          "copyable": {
            "id": "http://jsonschema.net/copyable",
            "type": "string"
          },
          "writersCanShare": {
            "id": "http://jsonschema.net/writersCanShare",
            "type": "string"
          },
          "shared": {
            "id": "http://jsonschema.net/shared",
            "type": "string"
          },
          "explicitlyTrashed": {
            "id": "http://jsonschema.net/explicitlyTrashed",
            "type": "string"
          },
          "appDataContents": {
            "id": "http://jsonschema.net/appDataContents",
            "type": "string"
          },
          "headRevisionId": {
            "id": "http://jsonschema.net/headRevisionId",
            "type": "string"
          },
          "properties": {
            "id": "http://jsonschema.net/properties",
            "type": "array",
            "items": {
              "id": "http://jsonschema.net/properties/0",
              "type": "string"
            }
          },
          "folderColorRgb": {
            "id": "http://jsonschema.net/folderColorRgb",
            "type": "string"
          },
          "imageMediaMetadata": {
            "id": "http://jsonschema.net/imageMediaMetadata",
            "type": "object",
            "properties": {
              "width": {
                "id": "http://jsonschema.net/imageMediaMetadata/width",
                "type": "string"
              },
              "height": {
                "id": "http://jsonschema.net/imageMediaMetadata/height",
                "type": "string"
              },
              "rotation": {
                "id": "http://jsonschema.net/imageMediaMetadata/rotation",
                "type": "string"
              },
              "location": {
                "id": "http://jsonschema.net/imageMediaMetadata/location",
                "type": "object",
                "properties": {
                  "latitude": {
                    "id": "http://jsonschema.net/imageMediaMetadata/location/latitude",
                    "type": "string"
                  },
                  "longitude": {
                    "id": "http://jsonschema.net/imageMediaMetadata/location/longitude",
                    "type": "string"
                  },
                  "altitude": {
                    "id": "http://jsonschema.net/imageMediaMetadata/location/altitude",
                    "type": "string"
                  }
                }
              },
              "date": {
                "id": "http://jsonschema.net/imageMediaMetadata/date",
                "type": "string"
              },
              "cameraMake": {
                "id": "http://jsonschema.net/imageMediaMetadata/cameraMake",
                "type": "string"
              },
              "cameraModel": {
                "id": "http://jsonschema.net/imageMediaMetadata/cameraModel",
                "type": "string"
              },
              "exposureTime": {
                "id": "http://jsonschema.net/imageMediaMetadata/exposureTime",
                "type": "string"
              },
              "aperture": {
                "id": "http://jsonschema.net/imageMediaMetadata/aperture",
                "type": "string"
              },
              "flashUsed": {
                "id": "http://jsonschema.net/imageMediaMetadata/flashUsed",
                "type": "string"
              },
              "focalLength": {
                "id": "http://jsonschema.net/imageMediaMetadata/focalLength",
                "type": "string"
              },
              "isoSpeed": {
                "id": "http://jsonschema.net/imageMediaMetadata/isoSpeed",
                "type": "string"
              },
              "meteringMode": {
                "id": "http://jsonschema.net/imageMediaMetadata/meteringMode",
                "type": "string"
              },
              "sensor": {
                "id": "http://jsonschema.net/imageMediaMetadata/sensor",
                "type": "string"
              },
              "exposureMode": {
                "id": "http://jsonschema.net/imageMediaMetadata/exposureMode",
                "type": "string"
              },
              "colorSpace": {
                "id": "http://jsonschema.net/imageMediaMetadata/colorSpace",
                "type": "string"
              },
              "whiteBalance": {
                "id": "http://jsonschema.net/imageMediaMetadata/whiteBalance",
                "type": "string"
              },
              "exposureBias": {
                "id": "http://jsonschema.net/imageMediaMetadata/exposureBias",
                "type": "string"
              },
              "maxApertureValue": {
                "id": "http://jsonschema.net/imageMediaMetadata/maxApertureValue",
                "type": "string"
              },
              "subjectDistance": {
                "id": "http://jsonschema.net/imageMediaMetadata/subjectDistance",
                "type": "string"
              },
              "lens": {
                "id": "http://jsonschema.net/imageMediaMetadata/lens",
                "type": "string"
              }
            }
          },
          "videoMediaMetadata": {
            "id": "http://jsonschema.net/videoMediaMetadata",
            "type": "object",
            "properties": {
              "width": {
                "id": "http://jsonschema.net/videoMediaMetadata/width",
                "type": "string"
              },
              "height": {
                "id": "http://jsonschema.net/videoMediaMetadata/height",
                "type": "string"
              },
              "durationMillis": {
                "id": "http://jsonschema.net/videoMediaMetadata/durationMillis",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "kind",
          "id",
          "etag",
          "selfLink",
          "webContentLink",
          "webViewLink",
          "alternateLink",
          "embedLink",
          "openWithLinks",
          "defaultOpenWithLink",
          "iconLink",
          "thumbnailLink",
          "thumbnail",
          "title",
          "mimeType",
          "description",
          "labels",
          "createdDate",
          "modifiedDate",
          "modifiedByMeDate",
          "lastViewedByMeDate",
          "markedViewedByMeDate",
          "sharedWithMeDate",
          "version",
          "sharingUser",
          "parents",
          "downloadUrl",
          "exportLinks",
          "indexableText",
          "userPermission",
          "permissions",
          "originalFilename",
          "fileExtension",
          "md5Checksum",
          "fileSize",
          "quotaBytesUsed",
          "ownerNames",
          "owners",
          "lastModifyingUserName",
          "lastModifyingUser",
          "editable",
          "copyable",
          "writersCanShare",
          "shared",
          "explicitlyTrashed",
          "appDataContents",
          "headRevisionId",
          "properties",
          "folderColorRgb",
          "imageMediaMetadata",
          "videoMediaMetadata"
        ]
      }
/files:
  post:
      description: <<Insert a new file. Subsequent GET requests include the read-only fileExtension property populated with the extension originally specified in the title property. When a Google Drive user requests to download a file, or when the file is downloaded through the sync client, Drive builds a full filename (with extension) based on the title. In cases where the extension is missing, Google Drive attempts to determine the extension based on the file's MIME type.
       Authorization 
        This request requires authorization with at least one of the following scopes (read more about authentication and authorization).
        Scope:- |
        https://www.googleapis.com/auth/drive
        https://www.googleapis.com/auth/drive.file
        https://www.googleapis.com/auth/drive.appdata
        https://www.googleapis.com/auth/drive.apps.readonly
        
        Body:-
        supply a Files resource with the following properties as the metadata. For more information, see the document on https://developers.google.com/drive/manage-uploads
          description:- string,  A short description of the file.
          folderColorRgb:- string,  Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette.
          indexableText.text:- string, The text to be indexed for this file.
          labels.hidden:- boolean, Deprecated.
          labels.restricted:- boolean, Whether viewers are prevented from downloading this file.
          labels.starred:- boolean, Whether this file is starred by the user.
          labels.trashed:- boolean, Whether this file has been trashed.
          labels.viewed:- boolean, Whether this file has been viewed by this user.
          lastViewedByMeDate:-datetime, Last time this file was viewed by the user (formatted RFC 3339 timestamp).
          markedViewedByMeDate:- datetime, Time this file was explicitly marked viewed by the user (formatted RFC 3339 timestamp).
          mimeType:- string, The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.
          modifiedDate:- datetime, Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.
          parents[]:- list, Collection of parent folders which contain this file.
          Setting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.
          properties[]:- list, The list of properties.
          title:- string, The title of the file. Used to identify file or folder name.
          writersCanShare:- boolean, Whether writers can share the document with other users.
          >>
      queryParameters: 
        "uploadType": 
          description: The type of upload request to the /upload URI. Acceptable values are:- |
            media - Simple upload. Upload the media only, without any metadata.
            multipart - Multipart upload. Upload both the media and its metadata, in a single request.
            resumable - Resumable upload. Upload the file in a resumable fashion, using a series of at least two requests where the first request includes the metadata.
          type: string
          required: true
        "convert": 
          description: Whether to convert this file to the corresponding Google Docs format. (Default:- false)
          type: boolean
          required: false
        "ocr": 
          description: Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads. (Default:- false)
          type: boolean
          required: false
        "ocrLanguage": 
          description: If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.
          type: string
          required: false
        "pinned": 
          description: Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions. (Default:- false)
          type: boolean
          required: false
        "timedTextLanguage": 
          description: The language of the timed text.
          type: string
          required: false
        "timedTextTrackName": 
          description: The timed text track name.
          type: string
          required: false
        "useContentAsIndexableText": 
          description: Whether to use the content as indexable text. (Default:- false)
          type: boolean
          required: false
        "visibility": 
          description: The visibility of the new file. This parameter is only relevant when convert=false. | 
            Acceptable values are:-
              "DEFAULT":- The visibility of the new file is determined by the user's default visibility/sharing policies. (default)
              "PRIVATE":- The new file will be visible to only the owner.
          type: string
          required: false
      headers:
        Authorization:
          description: The request Token issued via OAuth 2.0
          required: true
        Content-Type:
          description: if uploadType=media then Set to one of the method's accepted upload media data types, specified in https://developers.google.com/drive/v2/reference. If uploadType=multipart then Set to multipart/related and include the boundary string you're using to identify the parts of the request.
          required: false
        Content-Length:
          description: if uploadType=media thenSet to the number of bytes you are uploading. Not required if you are using chunked transfer encoding. If uploadType=multipart then Set to the total number of bytes in the request body. The media portion of the request must be less than the maximum file size specified for this method. If uploadType=resumable then Set to the number of bytes provided in the body of this initial request. Not required if you are using chunked transfer encoding.
          required: false
        X-Upload-Content-Type:
          description: Only required for uploadType=resumable. Set to the media MIME type of the upload data to be transferred in subsequent requests.
          required: false
        X-Upload-Content-Length:
          description: Only required for uploadType=resumable. Set to the number of bytes of upload data to be transferred in subsequent requests.  If the length is unknown at the time of this request, you can omit this header.
          required: false
      responses: 
        "200": 
          body: 
            "application/json": 
              schema: "file" 